#!/usr/bin/python3

'''
Author: KrakenBinary
This is a study at decrypting ROT13
    - Set the ROT to int (for change as needed)
    - set the alphabet manually (for change as needed)
'''


def set_ranges(start, end):
    '''setting up a range based on ascii table'''
    return range(start, end+1)


def de_rot_man(str_in):
    '''Manually rot on a defined alphabet'''
    rot_amt = 13
    srt_low, rng_end_low = 97, 122
    srt_upp, rng_end_upp = 65, 90
    rng_low = set_ranges(srt_low, rng_end_low)
    rng_upp = set_ranges(srt_upp, rng_end_upp)
    rot_low = {c: chr(c) for c in rng_low}
    rot_upp = {c: chr(c) for c in rng_upp}
    str_out = ''
    for chr_now in str_in:
        if chr_now in rot_low.values():
            chr_loc = ord(chr_now)
            new_loc = ((chr_loc - srt_low) + rot_amt) % len(rng_low) + srt_low
            str_out = str_out + chr(new_loc)
        elif chr_now in rot_upp.values():
            chr_loc = ord(chr_now)
            new_loc = ((chr_loc - srt_upp) + rot_amt) % len(rng_low) + srt_upp
            str_out = str_out + chr(new_loc)
        else:
            str_out = str_out + chr_now
    return str_out


# print(de_rot_man('''abcdefghijklmnopqrstuvwxyz'''))
# print(de_rot_man('''ABCDEFGHIJKLMNOPQRSTUVWXYZ'''))
print(de_rot_man('''cvpbPGS{arkg_gvzr_V'yy_gel_2_ebhaqf_bs_ebg13_uJdSftmh}'''))
